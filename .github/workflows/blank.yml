name: API Tests

on:
  schedule:
    - cron: "0 0 * * *"  # –ó–∞–ø—É—Å–∫ –∫–∞–∂–¥—ã–π –¥–µ–Ω—å –≤ 00:00 UTC
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: üì• –ö–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è
        uses: actions/checkout@v3

      - name: üîß –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π (Newman + Allure)
        run: |
          npm install -g newman newman-reporter-allure
          sudo apt update
          sudo apt install -y openjdk-11-jdk curl

          # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Homebrew (–µ—Å–ª–∏ –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω)
          if ! command -v brew &> /dev/null; then
            echo "üîß –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Homebrew..."
            /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
            echo 'eval "$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)"' >> ~/.bashrc
            eval "$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)"
          fi

          # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Allure —á–µ—Ä–µ–∑ Brew
          brew install allure

      - name: üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ Allure
        run: allure --version || echo "‚ùå Allure –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!"

      - name: üöÄ –ó–∞–ø—É—Å–∫ API-—Ç–µ—Å—Ç–æ–≤
        run: |
          mkdir -p allure-results
          newman run postman_collection_auth_fixed.json \
            -e Investudy.postman_environment.json \
            -r allure --reporter-allure-export=allure-results \
            -r cli --verbose | tee newman.log || true

      - name: üìÇ –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è Allure-—Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
        run: ls -la allure-results || echo "‚ùå –ü–∞–ø–∫–∞ `allure-results` –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç!"

      - name: üìä –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –æ—Ç—á–µ—Ç–∞ Allure
        if: always()
        run: |
          mkdir -p public
          if [ -d allure-results ] && [ "$(ls -A allure-results 2>/dev/null)" ]; then
            allure generate allure-results --clean -o public || echo "‚ùå –û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –æ—Ç—á–µ—Ç–∞!"
          else
            echo "‚ùå –ù–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ —Ç–µ—Å—Ç–æ–≤, –æ—Ç—á–µ—Ç –Ω–µ —Å–æ–∑–¥–∞–Ω!"
          fi

      - name: üì§ –ü—É–±–ª–∏–∫–∞—Ü–∏—è –æ—Ç—á–µ—Ç–∞ –Ω–∞ GitHub Pages
        if: always()
        run: |
          if [ "$(ls -A public 2>/dev/null)" ]; then
            git config --global user.email "github-actions[bot]@users.noreply.github.com"
            git config --global user.name "github-actions[bot]"
            git checkout --orphan gh-pages
            git reset --hard
            git clean -fdx
            cp -r public/* .
            git add .
            git commit -m "–û–±–Ω–æ–≤–ª–µ–Ω –æ—Ç—á–µ—Ç Allure"
            git push origin HEAD:gh-pages --force || true
          else
            echo "‚ùå –ü–∞–ø–∫–∞ public –ø—É—Å—Ç–∞, –ø—É–±–ª–∏–∫–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞!"
          fi

      - name: üì° –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ –æ—Ç–ø—Ä–∞–≤–∫–∞ –æ—Ç—á–µ—Ç–∞ –≤ Telegram
        env:
          TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
          TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
        run: |
          echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ chat_id: '$TELEGRAM_CHAT_ID'"
          if [ -z "$TELEGRAM_CHAT_ID" ]; then
            echo "‚ùå –û—à–∏–±–∫–∞: chat_id –ø—É—Å—Ç–æ–π!"
            exit 1
          fi

          MESSAGE="‚úÖ API-—Ç–µ—Å—Ç—ã —É—Å–ø–µ—à–Ω–æ –ø—Ä–æ–π–¥–µ–Ω—ã!"
          if grep -q "‚ùå –û—à–∏–±–∫–∞" newman.log; then 
            MESSAGE="‚ùå –û—à–∏–±–∫–∏ –≤ API-—Ç–µ—Å—Ç–∞—Ö!"
            ERRORS=$(grep "‚ùå –û—à–∏–±–∫–∞" newman.log | tail -10)
            MESSAGE="$MESSAGE%0A%0A$ERRORS"
          fi
          MESSAGE="$MESSAGE%0A–û—Ç—á–µ—Ç: https://Farabi001.github.io/api-tests/"

          curl -s -X POST "https://api.telegram.org/bot$TELEGRAM_BOT_TOKEN/sendMessage" \
          -d "chat_id=$TELEGRAM_CHAT_ID" \
          -d "text=$MESSAGE"
